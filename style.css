/* ================== GLOBAL STYLES & SETUP ================== */
:root {
    --bg-color: #f8f9fa;
    --font-color: #343a40;
    --border-color: #dee2e6;
    --shadow-color: rgba(0, 0, 0, 0.05);
    
    --data-color: #2e8b57; /* SeaGreen */
    --data-bg: #f0fff0;   /* Honeydew */
    
    --trainer-color: #4682b4; /* SteelBlue */
    --trainer-bg: #f0f8ff;   /* AliceBlue */
    
    --agent-color: #483d8b; /* DarkSlateBlue */
    --agent-bg: #e6e6fa;   /* Lavender */
    
    --env-color: var(--data-color);
    --env-bg: var(--data-bg);
    
    --output-color: #ffa500; /* Orange */
    --output-bg: #fffaf0;   /* FloralWhite */
    
    --arrow-color: #555;
    --loop-color: #d2691e; /* Chocolate */
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    background-color: var(--bg-color);
    color: var(--font-color);
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
}

header {
    margin-bottom: 2rem;
    text-align: center;
}

h1 { font-size: 2.5rem; color: #212529; }
h2 { font-size: 1.5rem; color: #6c757d; margin-bottom: 1.5rem; width: 100%; text-align: center; }
h3 { font-size: 1.2rem; margin-bottom: 0.75rem; }
h4 { font-size: 0.9rem; margin-bottom: 0.25rem; }
p { font-size: 0.9rem; color: #6c757d; line-height: 1.4; }
code {
    font-family: 'SF Mono', 'Fira Code', monospace;
    background-color: #e9ecef;
    padding: 0.2em 0.4em;
    border-radius: 4px;
    font-size: 0.85rem;
    margin-top: auto;
}

/* ================== DIAGRAM LAYOUT ================== */
.diagram-container {
    position: relative;
    width: 1200px;
    display: grid;
    grid-template-rows: auto auto auto;
    gap: 2rem 0;
}

.diagram-row {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 2rem;
    flex-wrap: wrap;
}

/* ================== CARD STYLES ================== */
.card {
    background-color: #ffffff;
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 4px 12px var(--shadow-color);
    text-align: center;
    transition: transform 0.2s, box-shadow 0.2s;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
}

.card svg {
    width: 28px;
    height: 28px;
    margin-bottom: 1rem;
    stroke-width: 1.5;
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
}

/* Specific Card Sizes & Colors */
#data-prep .card { width: 300px; height: 180px; border-top: 4px solid var(--data-color); }
#data-prep .card svg { stroke: var(--data-color); }

#training-core .card { border-top: 4px solid var(--trainer-color); }
#trainer { width: 1000px; height: 500px; position: relative; padding: 2rem; justify-content: space-between; flex-direction: row; }

#outputs .card { width: 300px; height: 200px; border-top: 4px solid var(--output-color); }
#outputs .card svg { stroke: var(--output-color); }


/* Internal component groups within Trainer */
.component-group {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
}
#agent { width: 450px; background-color: var(--agent-bg); border-color: var(--agent-color); }
#agent svg { stroke: var(--agent-color); }
#environment { width: 450px; background-color: var(--env-bg); border-color: var(--env-color); }
#environment svg { stroke: var(--env-color); }

.internal-components {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto;
    gap: 0.5rem;
    width: 100%;
    margin-top: 1rem;
}
.internal-components .card { padding: 0.5rem; height: 70px; border: 1px solid #ccc; font-size: 0.8rem; }
#q-network, #target-network { grid-row: 1; }
#memory { grid-column: 1 / span 2; grid-row: 2; height: 80px; }


/* ================== CONNECTORS & LABELS ================== */
.connector-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Place behind cards */
    pointer-events: none; /* Allow clicking through */
}

.connector-canvas path {
    fill: none;
    stroke-width: 2;
    marker-end: url(#arrowhead);
}
.connector-canvas #arrowhead polygon { fill: var(--arrow-color); }

.arrow { stroke: var(--arrow-color); }
.dashed { stroke-dasharray: 8, 6; }
.loop { stroke: var(--loop-color); }
.loop #arrowhead polygon { fill: var(--loop-color); }

/* Absolute positioned labels for arrows */
.label {
    position: absolute;
    background-color: var(--trainer-bg);
    padding: 2px 6px;
    font-size: 0.9rem;
    font-weight: bold;
    border-radius: 4px;
}
#label-state { top: 120px; left: 430px; color: var(--loop-color); }
#label-action { bottom: 120px; left: 430px; color: var(--loop-color); }
#label-feedback { bottom: 10px; left: 400px; color: var(--loop-color); }
#label-remember { bottom: 10px; left: 240px; color: var(--loop-color); }
#label-replay { top: 200px; left: 180px; color: var(--loop-color); transform: rotate(-90deg); }